{"version":3,"sources":["Api/ImageApi.js","Util/ImageApiHelper.js","Projects/Project1/ImageCard.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Pages/MainPage/ContentPage/MyGallery.jsx"],"names":["imageApi","axios","create","baseURL","process","timeout","apiImage","id","get","responseType","apiImageSize","blobURL","data","contentType","blob","b64Data","sliceSize","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","Blob","type","b64toBlob","Buffer","from","toString","URL","createObjectURL","ImageCard","props","useState","shouldCreate","setShouldCreate","width","height","size","setSize","image","setImage","useEffect","a","res","console","log","bimage","btob","headers","src","alt","className","getSize","then","_","getImage","style","React","memo","_toConsumableArray","arr","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","unsupportedIterableToArray","TypeError","MyGallery","widthRef","useRef","currentWidth","setCurrentWidth","allSize","setAllSize","allSizeRef","createRef","renderImage","setRenderImage","renderImageRef","columns","Math","max","floor","gotAll","keys","imageGallery","imageColumn","columnHeight","forEach","e","imageHeight","parseInt","replace","index","getLowestIndex","addNewImageCard","renderImageGallery","galleryResize","current","getComputedStyle","padding","mWidth","reachBotton","docHeight","document","documentElement","scrollHeight","winHeight","clientHeight","window","scrollY","createdImages","availableImages","n","getAllSize","p","images","initImages","init","addEventListener","removeEventListener","glassColor","ref"],"mappings":"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","file":"static/js/5.9c4090ba.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst imageApi = axios.create({\r\n    baseURL: process.env.REACT_APP_REST_IP || 'http://localhost:5000',\r\n    timeout: 20000\r\n})\r\n\r\nexport const apiImage = id => imageApi.get(`api/image/${id}`, {\r\n    responseType: 'arraybuffer'\r\n});\r\n\r\nexport const apiImageSize = (id = '') => imageApi.get(`api/imageSize/${id}`)","const b64toBlob = (b64Data, contentType = '', sliceSize = 512) => {\r\n    const byteCharacters = atob(b64Data);\r\n    const byteArrays = [];\r\n\r\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n        const slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n        const byteNumbers = new Array(slice.length);\r\n        for (let i = 0; i < slice.length; i++) {\r\n            byteNumbers[i] = slice.charCodeAt(i);\r\n        }\r\n\r\n        const byteArray = new Uint8Array(byteNumbers);\r\n        byteArrays.push(byteArray);\r\n    }\r\n    const blob = new Blob(byteArrays, { type: contentType });\r\n    return blob;\r\n}\r\n\r\nfunction blobURL(data, contentType) {\r\n    let base64 = Buffer.from(data, 'binary').toString('base64');\r\n    let blob = b64toBlob(base64, contentType);\r\n    return URL.createObjectURL(blob);\r\n}\r\n\r\nexport { blobURL };","import React, { useEffect, useState } from 'react'\r\nimport { apiImage, apiImageSize } from '../../Api/ImageApi';\r\nimport { blobURL as btob } from '../../Util/ImageApiHelper';\r\nimport './ImageCard.css';\r\n\r\nfunction ImageCard(props) {\r\n    const [shouldCreate, setShouldCreate] = useState(true)\r\n    const [size, setSize] = useState({ width: `${0}px`, height: `${0}px` });\r\n    const [image, setImage] = useState(null);\r\n    useEffect(\r\n        () => {\r\n            async function getSize() {\r\n                try {\r\n                    let res = await apiImageSize(props.id);\r\n                    setSize(res.data);\r\n                } catch (error) {\r\n                    console.log(error)\r\n                    throw error;\r\n                }\r\n            }\r\n\r\n            async function getImage() {\r\n                try {\r\n                    let res = await apiImage(props.id);\r\n                    let bimage = btob(res.data, res.headers[\"content-type\"]);\r\n                    setImage(\r\n                        <img src={bimage} alt=\"ImageCard\" className=\"image_card_image\"></img>\r\n                    );\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            getSize()\r\n                .then(_ => getImage(),\r\n                    _ => setShouldCreate(false))\r\n            return () => {\r\n                setShouldCreate(null);\r\n                setSize(null);\r\n                setImage(null);\r\n            }\r\n        },\r\n        [props.id]\r\n    )\r\n\r\n    return (\r\n        <>\r\n            {shouldCreate &&\r\n                <div style={size} className=\"image_card\">\r\n                    {image}\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(ImageCard);","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport { getLowestIndex } from '../../../Util/SetPropertyHelper';\r\nimport { apiImageSize } from '../../../Api/ImageApi';\r\nimport Glass from '../../../Global/Glassmorphism';\r\nimport './MyGallery.css';\r\nimport ImageCard from '../../../Projects/Project1/ImageCard';\r\n\r\nfunction MyGallery() {\r\n    // state for resize\r\n    const widthRef = useRef(null);\r\n    const [currentWidth, setCurrentWidth] = useState(0);\r\n\r\n    // state for available Images\r\n    const [allSize, setAllSize] = useState(null);\r\n    const allSizeRef = React.createRef(allSize);\r\n\r\n    // state for currently showed images\r\n    const [renderImage, setRenderImage] = useState([]);\r\n    const renderImageRef = React.createRef(renderImage);\r\n\r\n    let imageCardWidth = 240 + 20;\r\n    let columns = Math.max(Math.floor(currentWidth / imageCardWidth), 1)\r\n\r\n    let margin = 20;\r\n    let initImages = 27;\r\n    let gotAll = false;\r\n\r\n    function renderImageGallery() {\r\n        let imageColumn = [];\r\n        let columnHeight = [];\r\n        for (let i = 0; i < columns; i++) {\r\n            imageColumn.push([]);\r\n            columnHeight.push(0)\r\n        }\r\n        renderImage.forEach((e) => addNewImageCard(e, imageColumn, columnHeight))\r\n\r\n        let imageGallery = [];\r\n        imageColumn.forEach((e, i) =>\r\n            imageGallery.push(<div key={i} className=\"gallery_column\">{e}</div>))\r\n        return imageGallery;\r\n    }\r\n\r\n    function addNewImageCard(id, imageColumn, columnHeight) {\r\n        if (allSize == null)\r\n            return;\r\n        let size = allSize[id];\r\n        if (size == null)\r\n            return;\r\n        let imageHeight = parseInt(size.height.replace(/[^\\d]/g, ''));\r\n        let index = getLowestIndex(columnHeight);\r\n        columnHeight[index] += imageHeight + margin;\r\n        imageColumn[index].push(\r\n            <ImageCard key={id} id={id} style={size}></ImageCard>\r\n        );\r\n    }\r\n\r\n    if (allSize && renderImage && renderImage.length === Object.keys(allSize).length) {\r\n        gotAll = true;\r\n    }\r\n    const imageGallery = renderImageGallery();\r\n\r\n    useEffect(() => {\r\n        function galleryResize() {\r\n            if (!widthRef.current) {\r\n                return;\r\n            }\r\n            let { width, padding } = getComputedStyle(widthRef.current)\r\n            let mWidth = parseInt(width.replace(/[^\\d]/g, '')) -\r\n                parseInt(padding.replace(/[^\\d]/g, '')) * 2;\r\n            setCurrentWidth(mWidth);\r\n        }\r\n\r\n        function reachBotton() {\r\n            let docHeight = document.documentElement.scrollHeight;\r\n            let winHeight = document.documentElement.clientHeight;\r\n            let current = window.scrollY\r\n            if (allSizeRef.current != null && renderImageRef.current != null) {\r\n                let createdImages = renderImageRef.current.length;\r\n                let availableImages = Object.keys(allSizeRef.current).length;\r\n                if (current > (docHeight - 2 * winHeight)\r\n                    && createdImages < availableImages) {\r\n                    setRenderImage(e => {\r\n                        let n = [...e, e[e.length - 1] + 1];\r\n                        renderImageRef.current = n\r\n                        return n;\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        async function getAllSize() {\r\n            try {\r\n                let res = await apiImageSize();\r\n                return res.data\r\n            } catch (error) {\r\n                console.log(error)\r\n                throw error;\r\n            }\r\n        }\r\n\r\n        function init() {\r\n            let images = [...Array(initImages + 1).keys()].slice(1);\r\n            renderImageRef.current = images;\r\n            setRenderImage(images)\r\n        }\r\n\r\n        getAllSize()\r\n            .then(p => {\r\n                allSizeRef.current = p;\r\n                setAllSize(p);\r\n            })\r\n        galleryResize();\r\n        init();\r\n        console.log('testing')\r\n        window.addEventListener('scroll', reachBotton, true)\r\n        window.addEventListener('resize', galleryResize, true);\r\n        return () => {\r\n            window.removeEventListener('resize', galleryResize);\r\n            window.removeEventListener('scroll', reachBotton);\r\n            setAllSize(null);\r\n            setCurrentWidth(null);\r\n            setRenderImage(null);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div id='myGallery_description' className='my_d_container s_t_default_bg'>\r\n                <div className='s_c_padding h1_container'>\r\n                    <h1>My Gallery</h1>\r\n                </div>\r\n                <div className='s_c_padding h2_container'>\r\n                    <h2>This project is trying to fetch Images dynamically from ExpressJs Backend, through RESTful API.\r\n                        <br /><br />Waiting list of items to be integrated in this project:\r\n                        <br /><br />Progressive Image Loading, Image Upload Function,\r\n                        <br />Integrate and Upgrade Search Engine developed in my University Project to this Project, etc.\r\n                    </h2>\r\n                </div>\r\n            </div>\r\n            <div id=\"myGallery_container\" className=\"content_container\">\r\n                <div id=\"gallery_container\" className=\"s_c_padding\" >\r\n                    <Glass id=\"gallery\" glassColor=\"white\" ref={widthRef}>\r\n                        {imageGallery}\r\n                    </Glass>\r\n                </div>\r\n            </div>\r\n            {\r\n                gotAll &&\r\n                (<div className='my_d_footer'>\r\n                    <div className=\"s_c_padding h2_container \">\r\n                        <h2>That's all we can get from the server~</h2>\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default MyGallery;"],"sourceRoot":""}